{"version":3,"sources":["handlers/handleStringToArray.js","handlers/handleGetLetters.js","index.js"],"names":["strToArr","str","arr","regex","test","replace","split","push","getLetters","word","position","map","item","charAt","pwdLength","app","document","querySelector","form","output","password","letters","countLetters","input","value","length","isBiggerThanPwd","x","addEventListener","e","preventDefault","some","innerHTML","join"],"mappings":";AAiBeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAhBf,IAAMA,EAAW,SAAAC,GAEXC,IAAAA,EAAM,GAKNC,MADU,IACJC,KAAKH,GACNA,EAAII,QAAQ,MAAO,IAAIC,MAAM,MAGtCJ,EAAIK,KAAKN,GACFC,IAIMF,EAAAA,EAAAA,QAAAA,QAAAA;;ACZAQ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAJf,IAAMA,EAAa,SAACC,EAAMC,GAAaA,OAAAA,EAASC,IAAI,SAAAC,GACZH,MAAAA,+BAAAA,OAAAA,EAAKI,OAAOD,EAAO,GAAzD,cAGaJ,EAAAA,EAAAA,QAAAA,QAAAA;;ACef,aApBA,IAAA,EAAA,EAAA,QAAA,mCACA,EAAA,EAAA,QAAA,gCAmBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjBA,IAIIM,EAJEC,EAAMC,SAASC,cAAc,QAC7BC,EAAOF,SAASC,cAAc,qBAC9BE,EAASH,SAASC,cAAc,WAC9BG,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAIZC,EAAe,SAAAC,GAASA,OAAAA,EAAMC,MAAMC,QAGpCC,EAAkB,SAACC,GAChBA,OAAAA,EAAIb,GAIbM,EAASQ,iBAAiB,QAAS,WAAMd,OAAAA,EAAYQ,EAAaF,KAElEF,EAAKU,iBAAiB,SAAU,SAAAC,GAC9BA,EAAEC,kBAIE,EAAST,EAAAA,SAAAA,EAAQG,OAAOO,KAAKL,GAC/BP,EAAOa,UAAP,4DAEAb,EAAOa,WAAY,EAAWZ,EAAAA,SAAAA,EAASI,OAAO,EAASH,EAAAA,SAAAA,EAAQG,QAAQS,KAAK","file":"password-character-helper.0b268f23.js","sourceRoot":"..","sourcesContent":["// Turn string into an array, broken on the comma\r\nconst strToArr = str => {\r\n  // Init an empty array ready to store the letters\r\n  let arr = [];\r\n\r\n  // If the string contains a comma split the sting into an array\r\n  // Else push the number into an array on it's own\r\n  const regex = /,/;\r\n  if (regex.test(str)) {\r\n    return str.replace(/\\s/g, '').split(',');\r\n  }\r\n\r\n  arr.push(str);\r\n  return arr;\r\n \r\n};\r\n\r\nexport default strToArr;\r\n","// Check the positions entered\r\nconst getLetters = (word, position) => position.map(item => {\r\n  return `<span class=\"output-letter\">${word.charAt(item - 1)}</span>`;\r\n});\r\n\r\nexport default getLetters;\r\n","import strToArr from './handlers/handleStringToArray';\r\nimport getLetters from './handlers/handleGetLetters';\r\n\r\nconst app = document.querySelector('#app');\r\nconst form = document.querySelector('#password-checker');\r\nconst output = document.querySelector('.output');\r\nconst { password, letters } = form;\r\nlet pwdLength;\r\n\r\n// Count the number of letters in the password\r\nconst countLetters = input => input.value.length;\r\n\r\n// Check if number is greater than password\r\nconst isBiggerThanPwd = (x) => {\r\n  return x > pwdLength;\r\n}\r\n\r\n// Count the number of letters in the password\r\npassword.addEventListener('keyup', () => pwdLength = countLetters(password));\r\n\r\nform.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n  \r\n  // the .some method checks our array to see if at least one element passes the test\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some \r\n  if (strToArr(letters.value).some(isBiggerThanPwd)) {\r\n    output.innerHTML = `<p>There aren't that many letters in your password ðŸ¤¦</p>`;\r\n  } else {\r\n    output.innerHTML = getLetters(password.value, strToArr(letters.value)).join('');\r\n  }\r\n});\r\n"]}